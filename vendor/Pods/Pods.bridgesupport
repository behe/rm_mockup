<?xml version='1.0'?>
<signatures version='1.0'>
<enum value='0' name='MBProgressHUDAnimationFade'/>
<enum value='1' name='MBProgressHUDAnimationZoom'/>
<enum value='2' name='MBProgressHUDModeAnnularDeterminate'/>
<enum value='3' name='MBProgressHUDModeCustomView'/>
<enum value='1' name='MBProgressHUDModeDeterminate'/>
<enum value='0' name='MBProgressHUDModeIndeterminate'/>
<enum value='4' name='MBProgressHUDModeText'/>
<class name='MBProgressHUD'>
<method selector='HUDForView:' class_method='true'>
<arg declared_type='UIView*' type='@' name='view' index='0'/>
<retval declared_type='MBProgressHUD*' type='@'/>
</method>
<method selector='allHUDsForView:' class_method='true'>
<arg declared_type='UIView*' type='@' name='view' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='animationType'>
<retval declared_type='MBProgressHUDAnimation' type='i'/>
</method>
<method selector='customView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='detailsLabelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='detailsLabelText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dimBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='graceTime'>
<retval declared_type='float' type='f'/>
</method>
<method selector='hide:'>
<arg declared_type='BOOL' type='B' name='animated' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hide:afterDelay:'>
<arg declared_type='BOOL' type='B' name='animated' index='0'/>
<arg declared_type='NSTimeInterval' type='d' name='delay' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hideAllHUDsForView:animated:' class_method='true'>
<arg declared_type='UIView*' type='@' name='view' index='0'/>
<arg declared_type='BOOL' type='B' name='animated' index='1'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='hideHUDForView:animated:' class_method='true'>
<arg declared_type='UIView*' type='@' name='view' index='0'/>
<arg declared_type='BOOL' type='B' name='animated' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithView:'>
<arg declared_type='UIView*' type='@' name='view' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithWindow:'>
<arg declared_type='UIWindow*' type='@' name='window' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isSquare'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='labelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='labelText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='margin'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minShowTime'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='mode'>
<retval declared_type='MBProgressHUDMode' type='i'/>
</method>
<method selector='opacity'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='removeFromSuperViewOnHide'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAnimationType:'>
<arg declared_type='MBProgressHUDAnimation' type='i' name='animationType' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomView:'>
<arg declared_type='UIView*' type='@' name='customView' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' name='delegate' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailsLabelFont:'>
<arg declared_type='UIFont*' type='@' name='detailsLabelFont' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailsLabelText:'>
<arg declared_type='NSString*' type='@' name='detailsLabelText' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDimBackground:'>
<arg declared_type='BOOL' type='B' name='dimBackground' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGraceTime:'>
<arg declared_type='float' type='f' name='graceTime' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelFont:'>
<arg declared_type='UIFont*' type='@' name='labelFont' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelText:'>
<arg declared_type='NSString*' type='@' name='labelText' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMargin:'>
<arg declared_type='float' type='f' name='margin' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinShowTime:'>
<arg declared_type='float' type='f' name='minShowTime' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinSize:'>
<arg declared_type='CGSize' type='{CGSize=ff}' name='minSize' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='MBProgressHUDMode' type='i' name='mode' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='float' type='f' name='opacity' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' type='f' name='progress' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemoveFromSuperViewOnHide:'>
<arg declared_type='BOOL' type='B' name='removeFromSuperViewOnHide' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSquare:'>
<arg declared_type='BOOL' type='B' name='square' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskInProgress:'>
<arg declared_type='BOOL' type='B' name='taskInProgress' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXOffset:'>
<arg declared_type='float' type='f' name='xOffset' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYOffset:'>
<arg declared_type='float' type='f' name='yOffset' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='show:'>
<arg declared_type='BOOL' type='B' name='animated' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showHUDAddedTo:animated:' class_method='true'>
<arg declared_type='UIView*' type='@' name='view' index='0'/>
<arg declared_type='BOOL' type='B' name='animated' index='1'/>
<retval declared_type='MBProgressHUD*' type='@'/>
</method>
<method selector='showWhileExecuting:onTarget:withObject:animated:'>
<arg declared_type='SEL' type=':' name='method' index='0'/>
<arg declared_type='id' type='@' name='target' index='1'/>
<arg declared_type='id' type='@' name='object' index='2'/>
<arg declared_type='BOOL' type='B' name='animated' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='taskInProgress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='xOffset'>
<retval declared_type='float' type='f'/>
</method>
<method selector='yOffset'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='MBRoundProgressView'>
<method selector='isAnnular'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setAnnular:'>
<arg declared_type='BOOL' type='B' name='annular' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' type='f' name='progress' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='hudWasHidden:'>
<arg declared_type='MBProgressHUD*' type='@' name='hud' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SVPullToRefresh'>
<method selector='activityIndicatorViewStyle'>
<retval declared_type='UIActivityIndicatorViewStyle' type='i'/>
</method>
<method selector='arrowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='dateFormatter'>
<retval declared_type='NSDateFormatter*' type='@'/>
</method>
<method selector='lastUpdatedDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='setActivityIndicatorViewStyle:'>
<arg declared_type='UIActivityIndicatorViewStyle' type='i' name='activityIndicatorViewStyle' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setArrowColor:'>
<arg declared_type='UIColor*' type='@' name='arrowColor' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateFormatter:'>
<arg declared_type='NSDateFormatter*' type='@' name='dateFormatter' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastUpdatedDate:'>
<arg declared_type='NSDate*' type='@' name='lastUpdatedDate' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor*' type='@' name='textColor' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimating'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimating'>
<retval declared_type='void' type='v'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='triggerRefresh'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIScrollView'>
<method selector='addInfiniteScrollingWithActionHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' type='@?' name='actionHandler' index='0'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPullToRefreshWithActionHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' type='@?' name='actionHandler' index='0'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='infiniteScrollingView'>
<retval declared_type='SVPullToRefresh*' type='@'/>
</method>
<method selector='pullToRefreshView'>
<retval declared_type='SVPullToRefresh*' type='@'/>
</method>
<method selector='setInfiniteScrollingView:'>
<arg declared_type='SVPullToRefresh*' type='@' name='infiniteScrollingView' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPullToRefreshView:'>
<arg declared_type='SVPullToRefresh*' type='@' name='pullToRefreshView' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsInfiniteScrolling:'>
<arg declared_type='BOOL' type='B' name='showsInfiniteScrolling' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsPullToRefresh:'>
<arg declared_type='BOOL' type='B' name='showsPullToRefresh' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showsInfiniteScrolling'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsPullToRefresh'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<informal_protocol name='MBProgressHUDDelegate'>
<method selector='hudWasHidden:' type='v12@0:4@8'>
<arg declared_type='MBProgressHUD*' type='@' name='hud' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
